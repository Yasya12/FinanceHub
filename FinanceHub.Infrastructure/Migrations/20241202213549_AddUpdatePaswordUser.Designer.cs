// <auto-generated />
using System;
using FinanceHub.Infrastructure.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace FinanceHub.Infrastructure.Migrations
{
    [DbContext(typeof(FinHubDbContext))]
    [Migration("20241202213549_AddUpdatePaswordUser")]
    partial class AddUpdatePaswordUser
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("FinanceHub.Core.Entities.Category", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = new Guid("e29af721-d028-41c3-8d38-84e6527b4dee"),
                            Description = "Posts related to the latest technology trends",
                            Name = "Technology"
                        },
                        new
                        {
                            Id = new Guid("774c66ff-c56b-4bca-aa33-4ab870b69c4c"),
                            Description = "Health tips and news",
                            Name = "Health"
                        },
                        new
                        {
                            Id = new Guid("8eae2d60-414a-4c70-a644-0920606919de"),
                            Description = "Educational articles and resources",
                            Name = "Education"
                        });
                });

            modelBuilder.Entity("FinanceHub.Core.Entities.Comment", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("AuthorId")
                        .HasColumnType("uuid");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool>("IsModified")
                        .HasColumnType("boolean");

                    b.Property<Guid>("PostId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("AuthorId");

                    b.HasIndex("PostId");

                    b.ToTable("Comments");

                    b.HasData(
                        new
                        {
                            Id = new Guid("d228ea83-93e5-4be3-a551-2aefb2f5de45"),
                            AuthorId = new Guid("cc3e5bdb-8f05-436d-b52d-6ea1c1a671b3"),
                            Content = "Great introduction! Looking forward to learning more.",
                            CreatedAt = new DateTime(2024, 11, 27, 21, 35, 46, 870, DateTimeKind.Utc).AddTicks(5011),
                            IsModified = false,
                            PostId = new Guid("131909b1-e68e-4406-b869-56bab3aa19ea")
                        },
                        new
                        {
                            Id = new Guid("b2ea5cdc-8f8c-4228-9aa8-d5e4a73c1e9f"),
                            AuthorId = new Guid("8f80892e-ca32-4f1b-a8cd-22871d9dc17c"),
                            Content = "Interesting perspective on finance.",
                            CreatedAt = new DateTime(2024, 11, 28, 21, 35, 46, 870, DateTimeKind.Utc).AddTicks(5015),
                            IsModified = false,
                            PostId = new Guid("131909b1-e68e-4406-b869-56bab3aa19ea")
                        },
                        new
                        {
                            Id = new Guid("2102a8fb-05ac-4682-a1f7-4cfe27a26c8d"),
                            AuthorId = new Guid("cc3e5bdb-8f05-436d-b52d-6ea1c1a671b3"),
                            Content = "I found this article very helpful!",
                            CreatedAt = new DateTime(2024, 11, 29, 21, 35, 46, 870, DateTimeKind.Utc).AddTicks(5018),
                            IsModified = false,
                            PostId = new Guid("419e9abc-c1a6-4906-bdb9-248930e91310")
                        });
                });

            modelBuilder.Entity("FinanceHub.Core.Entities.Post", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("AuthorId")
                        .HasColumnType("uuid");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.HasIndex("AuthorId");

                    b.ToTable("Posts");

                    b.HasData(
                        new
                        {
                            Id = new Guid("131909b1-e68e-4406-b869-56bab3aa19ea"),
                            AuthorId = new Guid("cc3e5bdb-8f05-436d-b52d-6ea1c1a671b3"),
                            Content = "This is an introductory post about finance.",
                            CreatedAt = new DateTime(2024, 11, 22, 21, 35, 46, 870, DateTimeKind.Utc).AddTicks(4790),
                            Title = "Introduction to Finance",
                            UpdatedAt = new DateTime(2024, 11, 27, 21, 35, 46, 870, DateTimeKind.Utc).AddTicks(4803)
                        },
                        new
                        {
                            Id = new Guid("419e9abc-c1a6-4906-bdb9-248930e91310"),
                            AuthorId = new Guid("8f80892e-ca32-4f1b-a8cd-22871d9dc17c"),
                            Content = "Exploring advanced strategies in finance.",
                            CreatedAt = new DateTime(2024, 11, 12, 21, 35, 46, 870, DateTimeKind.Utc).AddTicks(4806),
                            Title = "Advanced Financial Strategies",
                            UpdatedAt = new DateTime(2024, 11, 30, 21, 35, 46, 870, DateTimeKind.Utc).AddTicks(4808)
                        });
                });

            modelBuilder.Entity("FinanceHub.Core.Entities.PostCategory", b =>
                {
                    b.Property<Guid>("PostId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("CategoryId")
                        .HasColumnType("uuid");

                    b.HasKey("PostId", "CategoryId");

                    b.HasIndex("CategoryId");

                    b.ToTable("PostCategories");

                    b.HasData(
                        new
                        {
                            PostId = new Guid("131909b1-e68e-4406-b869-56bab3aa19ea"),
                            CategoryId = new Guid("e29af721-d028-41c3-8d38-84e6527b4dee")
                        },
                        new
                        {
                            PostId = new Guid("131909b1-e68e-4406-b869-56bab3aa19ea"),
                            CategoryId = new Guid("8eae2d60-414a-4c70-a644-0920606919de")
                        },
                        new
                        {
                            PostId = new Guid("419e9abc-c1a6-4906-bdb9-248930e91310"),
                            CategoryId = new Guid("774c66ff-c56b-4bca-aa33-4ab870b69c4c")
                        },
                        new
                        {
                            PostId = new Guid("419e9abc-c1a6-4906-bdb9-248930e91310"),
                            CategoryId = new Guid("8eae2d60-414a-4c70-a644-0920606919de")
                        });
                });

            modelBuilder.Entity("FinanceHub.Core.Entities.Profile", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Bio")
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)");

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("text");

                    b.Property<string>("ProfilePictureUrl")
                        .HasColumnType("text");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("UserId")
                        .IsUnique();

                    b.ToTable("Profiles");

                    b.HasData(
                        new
                        {
                            Id = new Guid("d6d475a8-17ed-4dfe-8a74-00ef8ed66d9c"),
                            Country = "USA",
                            CreatedAt = new DateTime(2024, 12, 2, 21, 35, 46, 870, DateTimeKind.Utc).AddTicks(4664),
                            DateOfBirth = new DateTime(1990, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            PhoneNumber = "+1234567890",
                            UpdatedAt = new DateTime(2024, 12, 2, 21, 35, 46, 870, DateTimeKind.Utc).AddTicks(4671),
                            UserId = new Guid("cc3e5bdb-8f05-436d-b52d-6ea1c1a671b3")
                        },
                        new
                        {
                            Id = new Guid("f06c1cf3-0e06-4546-a655-dede99eb8728"),
                            Country = "Canada",
                            CreatedAt = new DateTime(2024, 12, 2, 21, 35, 46, 870, DateTimeKind.Utc).AddTicks(4680),
                            DateOfBirth = new DateTime(2000, 10, 10, 0, 0, 0, 0, DateTimeKind.Utc),
                            PhoneNumber = "+9876543210",
                            UpdatedAt = new DateTime(2024, 12, 2, 21, 35, 46, 870, DateTimeKind.Utc).AddTicks(4681),
                            UserId = new Guid("8f80892e-ca32-4f1b-a8cd-22871d9dc17c")
                        });
                });

            modelBuilder.Entity("FinanceHub.Core.Entities.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("GoogleId")
                        .HasColumnType("text");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Role")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("text")
                        .HasDefaultValue("user");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = new Guid("cc3e5bdb-8f05-436d-b52d-6ea1c1a671b3"),
                            Email = "johndoe@example.com",
                            PasswordHash = "$2a$11$LGHvkTHCijEYsZupfrxwiO.PDz/WEfD6sBuc3dNDnlpQpX38HKYJu",
                            Role = "User",
                            Username = "johndoe"
                        },
                        new
                        {
                            Id = new Guid("8f80892e-ca32-4f1b-a8cd-22871d9dc17c"),
                            Email = "admin@example.com",
                            PasswordHash = "$2a$11$tZwdxvnzU0HM0j/WeVuQk.oJeUTZGRHJih9Knp0YcHsWblc5k/RfO",
                            Role = "Admin",
                            Username = "admin"
                        });
                });

            modelBuilder.Entity("FinanceHub.Core.Entities.Comment", b =>
                {
                    b.HasOne("FinanceHub.Core.Entities.User", "Author")
                        .WithMany()
                        .HasForeignKey("AuthorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FinanceHub.Core.Entities.Post", "Post")
                        .WithMany("Comments")
                        .HasForeignKey("PostId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Author");

                    b.Navigation("Post");
                });

            modelBuilder.Entity("FinanceHub.Core.Entities.Post", b =>
                {
                    b.HasOne("FinanceHub.Core.Entities.User", "Author")
                        .WithMany()
                        .HasForeignKey("AuthorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Author");
                });

            modelBuilder.Entity("FinanceHub.Core.Entities.PostCategory", b =>
                {
                    b.HasOne("FinanceHub.Core.Entities.Category", "Category")
                        .WithMany("PostCategory")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FinanceHub.Core.Entities.Post", "Post")
                        .WithMany("PostCategory")
                        .HasForeignKey("PostId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");

                    b.Navigation("Post");
                });

            modelBuilder.Entity("FinanceHub.Core.Entities.Profile", b =>
                {
                    b.HasOne("FinanceHub.Core.Entities.User", "User")
                        .WithOne("Profile")
                        .HasForeignKey("FinanceHub.Core.Entities.Profile", "UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("FinanceHub.Core.Entities.Category", b =>
                {
                    b.Navigation("PostCategory");
                });

            modelBuilder.Entity("FinanceHub.Core.Entities.Post", b =>
                {
                    b.Navigation("Comments");

                    b.Navigation("PostCategory");
                });

            modelBuilder.Entity("FinanceHub.Core.Entities.User", b =>
                {
                    b.Navigation("Profile");
                });
#pragma warning restore 612, 618
        }
    }
}
