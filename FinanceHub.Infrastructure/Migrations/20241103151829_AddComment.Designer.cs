// <auto-generated />
using System;
using FinanceHub.Infrastructure.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace FinanceHub.Infrastructure.Migrations
{
    [DbContext(typeof(FinHubDbContext))]
    [Migration("20241103151829_AddComment")]
    partial class AddComment
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("FinanceHub.Core.Entities.Category", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = new Guid("74da599f-1d3d-4ef0-8f0e-8c918dd737f5"),
                            Description = "Posts related to the latest technology trends",
                            Name = "Technology"
                        },
                        new
                        {
                            Id = new Guid("9f06db2e-8ddf-43b6-8f1f-fb8b888b0569"),
                            Description = "Health tips and news",
                            Name = "Health"
                        },
                        new
                        {
                            Id = new Guid("a18939d0-a67c-40b6-aaee-741e151f938a"),
                            Description = "Educational articles and resources",
                            Name = "Education"
                        });
                });

            modelBuilder.Entity("FinanceHub.Core.Entities.Comment", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("AuthorId")
                        .HasColumnType("uuid");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("PostId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("AuthorId");

                    b.HasIndex("PostId");

                    b.ToTable("Comments");

                    b.HasData(
                        new
                        {
                            Id = new Guid("77f9167d-e1af-4794-b6ce-db74d6d27d2a"),
                            AuthorId = new Guid("1dfe606b-6abd-40e9-a3fd-28f233963188"),
                            Content = "Great introduction! Looking forward to learning more.",
                            CreatedAt = new DateTime(2024, 10, 29, 15, 18, 27, 495, DateTimeKind.Utc).AddTicks(3142),
                            PostId = new Guid("d23ac7a9-6c27-4e83-8956-50df768e927b")
                        },
                        new
                        {
                            Id = new Guid("677b265f-e072-4e2b-b9b4-7e07f21fc05f"),
                            AuthorId = new Guid("490e4312-ae7d-4945-a9b4-8b6222b214ab"),
                            Content = "Interesting perspective on finance.",
                            CreatedAt = new DateTime(2024, 10, 30, 15, 18, 27, 495, DateTimeKind.Utc).AddTicks(3143),
                            PostId = new Guid("d23ac7a9-6c27-4e83-8956-50df768e927b")
                        },
                        new
                        {
                            Id = new Guid("82ca66f0-4bbd-4558-8d44-719ecd9479e5"),
                            AuthorId = new Guid("1dfe606b-6abd-40e9-a3fd-28f233963188"),
                            Content = "I found this article very helpful!",
                            CreatedAt = new DateTime(2024, 10, 31, 15, 18, 27, 495, DateTimeKind.Utc).AddTicks(3154),
                            PostId = new Guid("6afc72c1-4779-4ca9-8949-4c25f4eaae28")
                        });
                });

            modelBuilder.Entity("FinanceHub.Core.Entities.Post", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("AuthorId")
                        .HasColumnType("uuid");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.HasIndex("AuthorId");

                    b.ToTable("Posts");

                    b.HasData(
                        new
                        {
                            Id = new Guid("d23ac7a9-6c27-4e83-8956-50df768e927b"),
                            AuthorId = new Guid("1dfe606b-6abd-40e9-a3fd-28f233963188"),
                            Content = "This is an introductory post about finance.",
                            CreatedAt = new DateTime(2024, 10, 24, 15, 18, 27, 495, DateTimeKind.Utc).AddTicks(2975),
                            Title = "Introduction to Finance",
                            UpdatedAt = new DateTime(2024, 10, 29, 15, 18, 27, 495, DateTimeKind.Utc).AddTicks(2986)
                        },
                        new
                        {
                            Id = new Guid("6afc72c1-4779-4ca9-8949-4c25f4eaae28"),
                            AuthorId = new Guid("490e4312-ae7d-4945-a9b4-8b6222b214ab"),
                            Content = "Exploring advanced strategies in finance.",
                            CreatedAt = new DateTime(2024, 10, 14, 15, 18, 27, 495, DateTimeKind.Utc).AddTicks(2987),
                            Title = "Advanced Financial Strategies",
                            UpdatedAt = new DateTime(2024, 11, 1, 15, 18, 27, 495, DateTimeKind.Utc).AddTicks(2988)
                        });
                });

            modelBuilder.Entity("FinanceHub.Core.Entities.PostCategory", b =>
                {
                    b.Property<Guid>("PostId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("CategoryId")
                        .HasColumnType("uuid");

                    b.HasKey("PostId", "CategoryId");

                    b.HasIndex("CategoryId");

                    b.ToTable("PostCategories");

                    b.HasData(
                        new
                        {
                            PostId = new Guid("d23ac7a9-6c27-4e83-8956-50df768e927b"),
                            CategoryId = new Guid("74da599f-1d3d-4ef0-8f0e-8c918dd737f5")
                        },
                        new
                        {
                            PostId = new Guid("d23ac7a9-6c27-4e83-8956-50df768e927b"),
                            CategoryId = new Guid("a18939d0-a67c-40b6-aaee-741e151f938a")
                        },
                        new
                        {
                            PostId = new Guid("6afc72c1-4779-4ca9-8949-4c25f4eaae28"),
                            CategoryId = new Guid("9f06db2e-8ddf-43b6-8f1f-fb8b888b0569")
                        },
                        new
                        {
                            PostId = new Guid("6afc72c1-4779-4ca9-8949-4c25f4eaae28"),
                            CategoryId = new Guid("a18939d0-a67c-40b6-aaee-741e151f938a")
                        });
                });

            modelBuilder.Entity("FinanceHub.Core.Entities.Profile", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Bio")
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)");

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("text");

                    b.Property<string>("ProfilePictureUrl")
                        .HasColumnType("text");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("UserId")
                        .IsUnique();

                    b.ToTable("Profiles");

                    b.HasData(
                        new
                        {
                            Id = new Guid("61233168-e22f-4b07-984e-ffcc09562fea"),
                            Country = "USA",
                            CreatedAt = new DateTime(2024, 11, 3, 15, 18, 27, 495, DateTimeKind.Utc).AddTicks(2928),
                            DateOfBirth = new DateTime(1990, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            PhoneNumber = "+1234567890",
                            UpdatedAt = new DateTime(2024, 11, 3, 15, 18, 27, 495, DateTimeKind.Utc).AddTicks(2932),
                            UserId = new Guid("1dfe606b-6abd-40e9-a3fd-28f233963188")
                        },
                        new
                        {
                            Id = new Guid("eea092d4-46f3-4a67-9baf-15fc562f03d9"),
                            Country = "Canada",
                            CreatedAt = new DateTime(2024, 11, 3, 15, 18, 27, 495, DateTimeKind.Utc).AddTicks(2938),
                            DateOfBirth = new DateTime(2000, 10, 10, 0, 0, 0, 0, DateTimeKind.Utc),
                            PhoneNumber = "+9876543210",
                            UpdatedAt = new DateTime(2024, 11, 3, 15, 18, 27, 495, DateTimeKind.Utc).AddTicks(2939),
                            UserId = new Guid("490e4312-ae7d-4945-a9b4-8b6222b214ab")
                        });
                });

            modelBuilder.Entity("FinanceHub.Core.Entities.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Role")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("text")
                        .HasDefaultValue("user");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = new Guid("1dfe606b-6abd-40e9-a3fd-28f233963188"),
                            Email = "johndoe@example.com",
                            PasswordHash = "$2a$11$GsCcxDRRsgVWy8fjANfXTuAKG2byLBNLOeGsrWgA6oHKPFIHn/vXy",
                            Role = "User",
                            Username = "johndoe"
                        },
                        new
                        {
                            Id = new Guid("490e4312-ae7d-4945-a9b4-8b6222b214ab"),
                            Email = "admin@example.com",
                            PasswordHash = "$2a$11$rS0abr5O9COLb..F2.mJXuqlDbq0TQUgZO32.CRmHDpIeSTTxiCZm",
                            Role = "Admin",
                            Username = "admin"
                        });
                });

            modelBuilder.Entity("FinanceHub.Core.Entities.Comment", b =>
                {
                    b.HasOne("FinanceHub.Core.Entities.User", "Author")
                        .WithMany()
                        .HasForeignKey("AuthorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FinanceHub.Core.Entities.Post", "Post")
                        .WithMany("Comments")
                        .HasForeignKey("PostId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Author");

                    b.Navigation("Post");
                });

            modelBuilder.Entity("FinanceHub.Core.Entities.Post", b =>
                {
                    b.HasOne("FinanceHub.Core.Entities.User", "Author")
                        .WithMany()
                        .HasForeignKey("AuthorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Author");
                });

            modelBuilder.Entity("FinanceHub.Core.Entities.PostCategory", b =>
                {
                    b.HasOne("FinanceHub.Core.Entities.Category", "Category")
                        .WithMany("PostCategory")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FinanceHub.Core.Entities.Post", "Post")
                        .WithMany("PostCategory")
                        .HasForeignKey("PostId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");

                    b.Navigation("Post");
                });

            modelBuilder.Entity("FinanceHub.Core.Entities.Profile", b =>
                {
                    b.HasOne("FinanceHub.Core.Entities.User", "User")
                        .WithOne("Profile")
                        .HasForeignKey("FinanceHub.Core.Entities.Profile", "UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("FinanceHub.Core.Entities.Category", b =>
                {
                    b.Navigation("PostCategory");
                });

            modelBuilder.Entity("FinanceHub.Core.Entities.Post", b =>
                {
                    b.Navigation("Comments");

                    b.Navigation("PostCategory");
                });

            modelBuilder.Entity("FinanceHub.Core.Entities.User", b =>
                {
                    b.Navigation("Profile");
                });
#pragma warning restore 612, 618
        }
    }
}
