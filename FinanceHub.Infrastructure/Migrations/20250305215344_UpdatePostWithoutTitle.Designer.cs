// <auto-generated />
using System;
using FinanceHub.Infrastructure.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace FinanceHub.Infrastructure.Migrations
{
    [DbContext(typeof(FinHubDbContext))]
    [Migration("20250305215344_UpdatePostWithoutTitle")]
    partial class UpdatePostWithoutTitle
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("FinanceHub.Core.Entities.Category", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = new Guid("71fc03fe-5e35-4bd4-8f8f-3b42aefd6913"),
                            Description = "Posts related to the latest technology trends",
                            Name = "Technology"
                        },
                        new
                        {
                            Id = new Guid("999e4b29-932a-4344-a8da-7fb86916d314"),
                            Description = "Health tips and news",
                            Name = "Health"
                        },
                        new
                        {
                            Id = new Guid("8ba4b470-2abe-490d-ad06-3a7f0ceb2ae3"),
                            Description = "Educational articles and resources",
                            Name = "Education"
                        });
                });

            modelBuilder.Entity("FinanceHub.Core.Entities.Chat", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.ToTable("Chats");
                });

            modelBuilder.Entity("FinanceHub.Core.Entities.ChatParticipant", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("ChatId")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("JoinedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("ChatId");

                    b.HasIndex("UserId");

                    b.ToTable("ChatParticipants");
                });

            modelBuilder.Entity("FinanceHub.Core.Entities.Comment", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("AuthorId")
                        .HasColumnType("uuid");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool>("IsModified")
                        .HasColumnType("boolean");

                    b.Property<Guid?>("ParentId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("PostId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("AuthorId");

                    b.HasIndex("ParentId");

                    b.HasIndex("PostId");

                    b.ToTable("Comments");

                    b.HasData(
                        new
                        {
                            Id = new Guid("27d24926-2bb2-4b22-b201-f10a5258185d"),
                            AuthorId = new Guid("e7181379-58ee-471f-a16e-6380a7f4d5f2"),
                            Content = "Great introduction! Looking forward to learning more.",
                            CreatedAt = new DateTime(2025, 2, 28, 21, 53, 43, 576, DateTimeKind.Utc).AddTicks(5816),
                            IsModified = false,
                            PostId = new Guid("f3c74e04-703f-49ab-a095-117b03e02199")
                        },
                        new
                        {
                            Id = new Guid("942e5943-4ef6-4139-9081-960e6ca21fde"),
                            AuthorId = new Guid("fc62f35c-e195-4e04-9ed9-605a18f35e7a"),
                            Content = "Interesting perspective on finance.",
                            CreatedAt = new DateTime(2025, 3, 1, 21, 53, 43, 576, DateTimeKind.Utc).AddTicks(5820),
                            IsModified = false,
                            PostId = new Guid("f3c74e04-703f-49ab-a095-117b03e02199")
                        },
                        new
                        {
                            Id = new Guid("f13b10e4-6ac1-4949-8581-cbdc2fa83332"),
                            AuthorId = new Guid("e7181379-58ee-471f-a16e-6380a7f4d5f2"),
                            Content = "I found this article very helpful!",
                            CreatedAt = new DateTime(2025, 3, 2, 21, 53, 43, 576, DateTimeKind.Utc).AddTicks(5823),
                            IsModified = false,
                            PostId = new Guid("71d711d5-c01c-4b3a-917a-466afb57533e")
                        });
                });

            modelBuilder.Entity("FinanceHub.Core.Entities.Like", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("PostId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("PostId");

                    b.HasIndex("UserId");

                    b.ToTable("Likes");

                    b.HasData(
                        new
                        {
                            Id = new Guid("65a19543-f292-4238-b93e-7823b90389ae"),
                            PostId = new Guid("f3c74e04-703f-49ab-a095-117b03e02199"),
                            UserId = new Guid("e7181379-58ee-471f-a16e-6380a7f4d5f2")
                        },
                        new
                        {
                            Id = new Guid("cbe01781-437d-456d-9fe3-c949cebc0b02"),
                            PostId = new Guid("f3c74e04-703f-49ab-a095-117b03e02199"),
                            UserId = new Guid("fc62f35c-e195-4e04-9ed9-605a18f35e7a")
                        },
                        new
                        {
                            Id = new Guid("060c2ab6-41d0-4c02-9e73-5314279dab1f"),
                            PostId = new Guid("71d711d5-c01c-4b3a-917a-466afb57533e"),
                            UserId = new Guid("e7181379-58ee-471f-a16e-6380a7f4d5f2")
                        });
                });

            modelBuilder.Entity("FinanceHub.Core.Entities.Message", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("ChatId")
                        .HasColumnType("uuid");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid>("SenderId")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("SentAt")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.HasIndex("ChatId");

                    b.HasIndex("SenderId");

                    b.ToTable("Messages");
                });

            modelBuilder.Entity("FinanceHub.Core.Entities.Post", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("AuthorId")
                        .HasColumnType("uuid");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.HasIndex("AuthorId");

                    b.ToTable("Posts");

                    b.HasData(
                        new
                        {
                            Id = new Guid("f3c74e04-703f-49ab-a095-117b03e02199"),
                            AuthorId = new Guid("e7181379-58ee-471f-a16e-6380a7f4d5f2"),
                            Content = "This is an introductory post about finance.",
                            CreatedAt = new DateTime(2025, 2, 23, 21, 53, 43, 576, DateTimeKind.Utc).AddTicks(5137),
                            UpdatedAt = new DateTime(2025, 2, 28, 21, 53, 43, 576, DateTimeKind.Utc).AddTicks(5157)
                        },
                        new
                        {
                            Id = new Guid("71d711d5-c01c-4b3a-917a-466afb57533e"),
                            AuthorId = new Guid("fc62f35c-e195-4e04-9ed9-605a18f35e7a"),
                            Content = "Exploring advanced strategies in finance.",
                            CreatedAt = new DateTime(2025, 2, 13, 21, 53, 43, 576, DateTimeKind.Utc).AddTicks(5159),
                            UpdatedAt = new DateTime(2025, 3, 3, 21, 53, 43, 576, DateTimeKind.Utc).AddTicks(5160)
                        });
                });

            modelBuilder.Entity("FinanceHub.Core.Entities.PostCategory", b =>
                {
                    b.Property<Guid>("PostId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("CategoryId")
                        .HasColumnType("uuid");

                    b.HasKey("PostId", "CategoryId");

                    b.HasIndex("CategoryId");

                    b.ToTable("PostCategories");

                    b.HasData(
                        new
                        {
                            PostId = new Guid("f3c74e04-703f-49ab-a095-117b03e02199"),
                            CategoryId = new Guid("71fc03fe-5e35-4bd4-8f8f-3b42aefd6913")
                        },
                        new
                        {
                            PostId = new Guid("f3c74e04-703f-49ab-a095-117b03e02199"),
                            CategoryId = new Guid("8ba4b470-2abe-490d-ad06-3a7f0ceb2ae3")
                        },
                        new
                        {
                            PostId = new Guid("71d711d5-c01c-4b3a-917a-466afb57533e"),
                            CategoryId = new Guid("999e4b29-932a-4344-a8da-7fb86916d314")
                        },
                        new
                        {
                            PostId = new Guid("71d711d5-c01c-4b3a-917a-466afb57533e"),
                            CategoryId = new Guid("8ba4b470-2abe-490d-ad06-3a7f0ceb2ae3")
                        });
                });

            modelBuilder.Entity("FinanceHub.Core.Entities.PostImage", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("text");

                    b.Property<Guid>("PostId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.ToTable("PostImages");
                });

            modelBuilder.Entity("FinanceHub.Core.Entities.Profile", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Bio")
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)");

                    b.Property<string>("Country")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime?>("DateOfBirth")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("text");

                    b.Property<string>("ProfilePictureUrl")
                        .HasColumnType("text");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("UserId")
                        .IsUnique();

                    b.ToTable("Profiles");

                    b.HasData(
                        new
                        {
                            Id = new Guid("baf274e7-e550-43d1-bb87-3fdba2313e90"),
                            Country = "USA",
                            CreatedAt = new DateTime(2025, 3, 5, 21, 53, 43, 576, DateTimeKind.Utc).AddTicks(5007),
                            DateOfBirth = new DateTime(1990, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            PhoneNumber = "+1234567890",
                            UpdatedAt = new DateTime(2025, 3, 5, 21, 53, 43, 576, DateTimeKind.Utc).AddTicks(5013),
                            UserId = new Guid("e7181379-58ee-471f-a16e-6380a7f4d5f2")
                        },
                        new
                        {
                            Id = new Guid("32dcf723-4ca8-412a-a7a5-a6b9f1397eef"),
                            Country = "Canada",
                            CreatedAt = new DateTime(2025, 3, 5, 21, 53, 43, 576, DateTimeKind.Utc).AddTicks(5046),
                            DateOfBirth = new DateTime(2000, 10, 10, 0, 0, 0, 0, DateTimeKind.Utc),
                            PhoneNumber = "+9876543210",
                            UpdatedAt = new DateTime(2025, 3, 5, 21, 53, 43, 576, DateTimeKind.Utc).AddTicks(5047),
                            UserId = new Guid("fc62f35c-e195-4e04-9ed9-605a18f35e7a")
                        });
                });

            modelBuilder.Entity("FinanceHub.Core.Entities.Subscription", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("SubscribedToId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("SubscriberId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("SubscribedToId");

                    b.HasIndex("SubscriberId");

                    b.ToTable("Subscriptions");
                });

            modelBuilder.Entity("FinanceHub.Core.Entities.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("GoogleId")
                        .HasColumnType("text");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("text");

                    b.Property<string>("Role")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("text")
                        .HasDefaultValue("user");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = new Guid("e7181379-58ee-471f-a16e-6380a7f4d5f2"),
                            Email = "johndoe@example.com",
                            PasswordHash = "$2a$11$XSAfyoZSC.WpKUjsrKhTd.22frZcqWQ3qzG5HoRaHBq/bUy2fiM1G",
                            Role = "User",
                            Username = "johndoe"
                        },
                        new
                        {
                            Id = new Guid("fc62f35c-e195-4e04-9ed9-605a18f35e7a"),
                            Email = "admin@example.com",
                            PasswordHash = "$2a$11$Rx6ag/ZaTZIil0cNO77YteNRWTx5lbNz1mM7LUK7hYMRUOOqIUGem",
                            Role = "Admin",
                            Username = "admin"
                        });
                });

            modelBuilder.Entity("FinanceHub.Core.Entities.ChatParticipant", b =>
                {
                    b.HasOne("FinanceHub.Core.Entities.Chat", "Chat")
                        .WithMany("Participants")
                        .HasForeignKey("ChatId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FinanceHub.Core.Entities.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Chat");

                    b.Navigation("User");
                });

            modelBuilder.Entity("FinanceHub.Core.Entities.Comment", b =>
                {
                    b.HasOne("FinanceHub.Core.Entities.User", "Author")
                        .WithMany()
                        .HasForeignKey("AuthorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FinanceHub.Core.Entities.Comment", "ParentComment")
                        .WithMany("Replies")
                        .HasForeignKey("ParentId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("FinanceHub.Core.Entities.Post", "Post")
                        .WithMany("Comments")
                        .HasForeignKey("PostId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Author");

                    b.Navigation("ParentComment");

                    b.Navigation("Post");
                });

            modelBuilder.Entity("FinanceHub.Core.Entities.Like", b =>
                {
                    b.HasOne("FinanceHub.Core.Entities.Post", "Post")
                        .WithMany("Likes")
                        .HasForeignKey("PostId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FinanceHub.Core.Entities.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Post");

                    b.Navigation("User");
                });

            modelBuilder.Entity("FinanceHub.Core.Entities.Message", b =>
                {
                    b.HasOne("FinanceHub.Core.Entities.Chat", "Chat")
                        .WithMany("Messages")
                        .HasForeignKey("ChatId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FinanceHub.Core.Entities.User", "Sender")
                        .WithMany()
                        .HasForeignKey("SenderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Chat");

                    b.Navigation("Sender");
                });

            modelBuilder.Entity("FinanceHub.Core.Entities.Post", b =>
                {
                    b.HasOne("FinanceHub.Core.Entities.User", "Author")
                        .WithMany()
                        .HasForeignKey("AuthorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Author");
                });

            modelBuilder.Entity("FinanceHub.Core.Entities.PostCategory", b =>
                {
                    b.HasOne("FinanceHub.Core.Entities.Category", "Category")
                        .WithMany("PostCategory")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FinanceHub.Core.Entities.Post", "Post")
                        .WithMany("PostCategory")
                        .HasForeignKey("PostId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");

                    b.Navigation("Post");
                });

            modelBuilder.Entity("FinanceHub.Core.Entities.Profile", b =>
                {
                    b.HasOne("FinanceHub.Core.Entities.User", "User")
                        .WithOne("Profile")
                        .HasForeignKey("FinanceHub.Core.Entities.Profile", "UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("FinanceHub.Core.Entities.Subscription", b =>
                {
                    b.HasOne("FinanceHub.Core.Entities.User", "SubscribedTo")
                        .WithMany()
                        .HasForeignKey("SubscribedToId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FinanceHub.Core.Entities.User", "Subscriber")
                        .WithMany()
                        .HasForeignKey("SubscriberId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("SubscribedTo");

                    b.Navigation("Subscriber");
                });

            modelBuilder.Entity("FinanceHub.Core.Entities.Category", b =>
                {
                    b.Navigation("PostCategory");
                });

            modelBuilder.Entity("FinanceHub.Core.Entities.Chat", b =>
                {
                    b.Navigation("Messages");

                    b.Navigation("Participants");
                });

            modelBuilder.Entity("FinanceHub.Core.Entities.Comment", b =>
                {
                    b.Navigation("Replies");
                });

            modelBuilder.Entity("FinanceHub.Core.Entities.Post", b =>
                {
                    b.Navigation("Comments");

                    b.Navigation("Likes");

                    b.Navigation("PostCategory");
                });

            modelBuilder.Entity("FinanceHub.Core.Entities.User", b =>
                {
                    b.Navigation("Profile");
                });
#pragma warning restore 612, 618
        }
    }
}
