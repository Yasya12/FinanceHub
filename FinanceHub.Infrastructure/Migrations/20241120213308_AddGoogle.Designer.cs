// <auto-generated />
using System;
using FinanceHub.Infrastructure.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace FinanceHub.Infrastructure.Migrations
{
    [DbContext(typeof(FinHubDbContext))]
    [Migration("20241120213308_AddGoogle")]
    partial class AddGoogle
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("FinanceHub.Core.Entities.Category", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = new Guid("71c7cdd8-88d0-49e1-9e7d-661b81ab9582"),
                            Description = "Posts related to the latest technology trends",
                            Name = "Technology"
                        },
                        new
                        {
                            Id = new Guid("18994354-e438-472b-9f9c-6a579f331176"),
                            Description = "Health tips and news",
                            Name = "Health"
                        },
                        new
                        {
                            Id = new Guid("601d7aec-1643-4ab1-83f8-268df8998134"),
                            Description = "Educational articles and resources",
                            Name = "Education"
                        });
                });

            modelBuilder.Entity("FinanceHub.Core.Entities.Comment", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("AuthorId")
                        .HasColumnType("uuid");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool>("IsModified")
                        .HasColumnType("boolean");

                    b.Property<Guid>("PostId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("AuthorId");

                    b.HasIndex("PostId");

                    b.ToTable("Comments");

                    b.HasData(
                        new
                        {
                            Id = new Guid("42098c66-e472-43a7-9135-0182d309aab0"),
                            AuthorId = new Guid("681219eb-03ca-4c27-a987-274bf1f0aab7"),
                            Content = "Great introduction! Looking forward to learning more.",
                            CreatedAt = new DateTime(2024, 11, 15, 21, 33, 6, 643, DateTimeKind.Utc).AddTicks(8578),
                            IsModified = false,
                            PostId = new Guid("43b7bfb9-81fb-49b6-a275-0e3d4292b9ea")
                        },
                        new
                        {
                            Id = new Guid("1ba8d72b-107a-4e22-b360-bf2721f10290"),
                            AuthorId = new Guid("a56e5680-88aa-41cd-9bdc-cae4e8a2bb47"),
                            Content = "Interesting perspective on finance.",
                            CreatedAt = new DateTime(2024, 11, 16, 21, 33, 6, 643, DateTimeKind.Utc).AddTicks(8579),
                            IsModified = false,
                            PostId = new Guid("43b7bfb9-81fb-49b6-a275-0e3d4292b9ea")
                        },
                        new
                        {
                            Id = new Guid("75dc3750-a856-4350-9c2f-fee5094f4720"),
                            AuthorId = new Guid("681219eb-03ca-4c27-a987-274bf1f0aab7"),
                            Content = "I found this article very helpful!",
                            CreatedAt = new DateTime(2024, 11, 17, 21, 33, 6, 643, DateTimeKind.Utc).AddTicks(8580),
                            IsModified = false,
                            PostId = new Guid("12b541b7-e4ce-43cb-b930-4c3e6536f827")
                        });
                });

            modelBuilder.Entity("FinanceHub.Core.Entities.Post", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("AuthorId")
                        .HasColumnType("uuid");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.HasIndex("AuthorId");

                    b.ToTable("Posts");

                    b.HasData(
                        new
                        {
                            Id = new Guid("43b7bfb9-81fb-49b6-a275-0e3d4292b9ea"),
                            AuthorId = new Guid("681219eb-03ca-4c27-a987-274bf1f0aab7"),
                            Content = "This is an introductory post about finance.",
                            CreatedAt = new DateTime(2024, 11, 10, 21, 33, 6, 643, DateTimeKind.Utc).AddTicks(8432),
                            Title = "Introduction to Finance",
                            UpdatedAt = new DateTime(2024, 11, 15, 21, 33, 6, 643, DateTimeKind.Utc).AddTicks(8446)
                        },
                        new
                        {
                            Id = new Guid("12b541b7-e4ce-43cb-b930-4c3e6536f827"),
                            AuthorId = new Guid("a56e5680-88aa-41cd-9bdc-cae4e8a2bb47"),
                            Content = "Exploring advanced strategies in finance.",
                            CreatedAt = new DateTime(2024, 10, 31, 21, 33, 6, 643, DateTimeKind.Utc).AddTicks(8447),
                            Title = "Advanced Financial Strategies",
                            UpdatedAt = new DateTime(2024, 11, 18, 21, 33, 6, 643, DateTimeKind.Utc).AddTicks(8447)
                        });
                });

            modelBuilder.Entity("FinanceHub.Core.Entities.PostCategory", b =>
                {
                    b.Property<Guid>("PostId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("CategoryId")
                        .HasColumnType("uuid");

                    b.HasKey("PostId", "CategoryId");

                    b.HasIndex("CategoryId");

                    b.ToTable("PostCategories");

                    b.HasData(
                        new
                        {
                            PostId = new Guid("43b7bfb9-81fb-49b6-a275-0e3d4292b9ea"),
                            CategoryId = new Guid("71c7cdd8-88d0-49e1-9e7d-661b81ab9582")
                        },
                        new
                        {
                            PostId = new Guid("43b7bfb9-81fb-49b6-a275-0e3d4292b9ea"),
                            CategoryId = new Guid("601d7aec-1643-4ab1-83f8-268df8998134")
                        },
                        new
                        {
                            PostId = new Guid("12b541b7-e4ce-43cb-b930-4c3e6536f827"),
                            CategoryId = new Guid("18994354-e438-472b-9f9c-6a579f331176")
                        },
                        new
                        {
                            PostId = new Guid("12b541b7-e4ce-43cb-b930-4c3e6536f827"),
                            CategoryId = new Guid("601d7aec-1643-4ab1-83f8-268df8998134")
                        });
                });

            modelBuilder.Entity("FinanceHub.Core.Entities.Profile", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Bio")
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)");

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("text");

                    b.Property<string>("ProfilePictureUrl")
                        .HasColumnType("text");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("UserId")
                        .IsUnique();

                    b.ToTable("Profiles");

                    b.HasData(
                        new
                        {
                            Id = new Guid("3216aaad-6df0-4960-a58b-3c8b339bf8a1"),
                            Country = "USA",
                            CreatedAt = new DateTime(2024, 11, 20, 21, 33, 6, 643, DateTimeKind.Utc).AddTicks(8357),
                            DateOfBirth = new DateTime(1990, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            PhoneNumber = "+1234567890",
                            UpdatedAt = new DateTime(2024, 11, 20, 21, 33, 6, 643, DateTimeKind.Utc).AddTicks(8360),
                            UserId = new Guid("681219eb-03ca-4c27-a987-274bf1f0aab7")
                        },
                        new
                        {
                            Id = new Guid("5bf7fe92-4e4e-4810-9953-c34d08f0db28"),
                            Country = "Canada",
                            CreatedAt = new DateTime(2024, 11, 20, 21, 33, 6, 643, DateTimeKind.Utc).AddTicks(8386),
                            DateOfBirth = new DateTime(2000, 10, 10, 0, 0, 0, 0, DateTimeKind.Utc),
                            PhoneNumber = "+9876543210",
                            UpdatedAt = new DateTime(2024, 11, 20, 21, 33, 6, 643, DateTimeKind.Utc).AddTicks(8387),
                            UserId = new Guid("a56e5680-88aa-41cd-9bdc-cae4e8a2bb47")
                        });
                });

            modelBuilder.Entity("FinanceHub.Core.Entities.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("GoogleId")
                        .HasColumnType("text");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Role")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("text")
                        .HasDefaultValue("user");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = new Guid("681219eb-03ca-4c27-a987-274bf1f0aab7"),
                            Email = "johndoe@example.com",
                            PasswordHash = "$2a$11$/0HXgOTJlcdvoWHhCvYMMuMlqkH4OjBZHsQ46dkL.bcp4IdCVAhM2",
                            Role = "User",
                            Username = "johndoe"
                        },
                        new
                        {
                            Id = new Guid("a56e5680-88aa-41cd-9bdc-cae4e8a2bb47"),
                            Email = "admin@example.com",
                            PasswordHash = "$2a$11$Q.OhTC8yt0cR9BUKA6fsrult56g80BKdmo8GWRCCNLXy/XpFPLeIm",
                            Role = "Admin",
                            Username = "admin"
                        });
                });

            modelBuilder.Entity("FinanceHub.Core.Entities.Comment", b =>
                {
                    b.HasOne("FinanceHub.Core.Entities.User", "Author")
                        .WithMany()
                        .HasForeignKey("AuthorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FinanceHub.Core.Entities.Post", "Post")
                        .WithMany("Comments")
                        .HasForeignKey("PostId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Author");

                    b.Navigation("Post");
                });

            modelBuilder.Entity("FinanceHub.Core.Entities.Post", b =>
                {
                    b.HasOne("FinanceHub.Core.Entities.User", "Author")
                        .WithMany()
                        .HasForeignKey("AuthorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Author");
                });

            modelBuilder.Entity("FinanceHub.Core.Entities.PostCategory", b =>
                {
                    b.HasOne("FinanceHub.Core.Entities.Category", "Category")
                        .WithMany("PostCategory")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FinanceHub.Core.Entities.Post", "Post")
                        .WithMany("PostCategory")
                        .HasForeignKey("PostId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");

                    b.Navigation("Post");
                });

            modelBuilder.Entity("FinanceHub.Core.Entities.Profile", b =>
                {
                    b.HasOne("FinanceHub.Core.Entities.User", "User")
                        .WithOne("Profile")
                        .HasForeignKey("FinanceHub.Core.Entities.Profile", "UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("FinanceHub.Core.Entities.Category", b =>
                {
                    b.Navigation("PostCategory");
                });

            modelBuilder.Entity("FinanceHub.Core.Entities.Post", b =>
                {
                    b.Navigation("Comments");

                    b.Navigation("PostCategory");
                });

            modelBuilder.Entity("FinanceHub.Core.Entities.User", b =>
                {
                    b.Navigation("Profile");
                });
#pragma warning restore 612, 618
        }
    }
}
