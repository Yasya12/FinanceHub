// <auto-generated />
using System;
using FinanceHub.Infrastructure.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace FinanceHub.Infrastructure.Migrations
{
    [DbContext(typeof(FinHubDbContext))]
    [Migration("20250218123348_UpdateUserEntity")]
    partial class UpdateUserEntity
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("FinanceHub.Core.Entities.Category", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = new Guid("460929ba-a82f-46d1-ab8b-a8e85f987346"),
                            Description = "Posts related to the latest technology trends",
                            Name = "Technology"
                        },
                        new
                        {
                            Id = new Guid("8449d5d1-0164-4b28-bd2c-e5cc657a0ee2"),
                            Description = "Health tips and news",
                            Name = "Health"
                        },
                        new
                        {
                            Id = new Guid("a27b8bc1-f3f7-4265-95a5-5dc78b614e1e"),
                            Description = "Educational articles and resources",
                            Name = "Education"
                        });
                });

            modelBuilder.Entity("FinanceHub.Core.Entities.Chat", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.ToTable("Chats");
                });

            modelBuilder.Entity("FinanceHub.Core.Entities.ChatParticipant", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("ChatId")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("JoinedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("ChatId");

                    b.HasIndex("UserId");

                    b.ToTable("ChatParticipants");
                });

            modelBuilder.Entity("FinanceHub.Core.Entities.Comment", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("AuthorId")
                        .HasColumnType("uuid");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool>("IsModified")
                        .HasColumnType("boolean");

                    b.Property<Guid?>("ParentId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("PostId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("AuthorId");

                    b.HasIndex("ParentId");

                    b.HasIndex("PostId");

                    b.ToTable("Comments");

                    b.HasData(
                        new
                        {
                            Id = new Guid("804cb1f3-6244-4326-8945-4c35ff917543"),
                            AuthorId = new Guid("b2522c58-967c-4a0e-86ca-dba3bfd30c6f"),
                            Content = "Great introduction! Looking forward to learning more.",
                            CreatedAt = new DateTime(2025, 2, 13, 12, 33, 47, 152, DateTimeKind.Utc).AddTicks(3817),
                            IsModified = false,
                            PostId = new Guid("9ad4264d-3782-45ce-a16e-99fa858ec415")
                        },
                        new
                        {
                            Id = new Guid("fabf5a1a-117d-43f2-bce7-c336e5da3a1d"),
                            AuthorId = new Guid("f0a77459-ddb2-489d-9036-8b8707c0fd30"),
                            Content = "Interesting perspective on finance.",
                            CreatedAt = new DateTime(2025, 2, 14, 12, 33, 47, 152, DateTimeKind.Utc).AddTicks(3822),
                            IsModified = false,
                            PostId = new Guid("9ad4264d-3782-45ce-a16e-99fa858ec415")
                        },
                        new
                        {
                            Id = new Guid("c37de9c7-c888-44a4-a60b-79b5fa8b177b"),
                            AuthorId = new Guid("b2522c58-967c-4a0e-86ca-dba3bfd30c6f"),
                            Content = "I found this article very helpful!",
                            CreatedAt = new DateTime(2025, 2, 15, 12, 33, 47, 152, DateTimeKind.Utc).AddTicks(3825),
                            IsModified = false,
                            PostId = new Guid("6d173fd1-f19e-4d0f-aa05-7b4a37ca63bc")
                        });
                });

            modelBuilder.Entity("FinanceHub.Core.Entities.Like", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("PostId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("PostId");

                    b.HasIndex("UserId");

                    b.ToTable("Likes");

                    b.HasData(
                        new
                        {
                            Id = new Guid("810e45c2-00d7-4fc2-a477-32cdc9decbb7"),
                            PostId = new Guid("9ad4264d-3782-45ce-a16e-99fa858ec415"),
                            UserId = new Guid("b2522c58-967c-4a0e-86ca-dba3bfd30c6f")
                        },
                        new
                        {
                            Id = new Guid("62d8b646-0e40-4145-89aa-bda90e660d13"),
                            PostId = new Guid("9ad4264d-3782-45ce-a16e-99fa858ec415"),
                            UserId = new Guid("f0a77459-ddb2-489d-9036-8b8707c0fd30")
                        },
                        new
                        {
                            Id = new Guid("b0ac3947-77fc-44ad-adc4-09a95bdc8597"),
                            PostId = new Guid("6d173fd1-f19e-4d0f-aa05-7b4a37ca63bc"),
                            UserId = new Guid("b2522c58-967c-4a0e-86ca-dba3bfd30c6f")
                        });
                });

            modelBuilder.Entity("FinanceHub.Core.Entities.Message", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("ChatId")
                        .HasColumnType("uuid");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid>("SenderId")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("SentAt")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.HasIndex("ChatId");

                    b.HasIndex("SenderId");

                    b.ToTable("Messages");
                });

            modelBuilder.Entity("FinanceHub.Core.Entities.Post", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("AuthorId")
                        .HasColumnType("uuid");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.HasIndex("AuthorId");

                    b.ToTable("Posts");

                    b.HasData(
                        new
                        {
                            Id = new Guid("9ad4264d-3782-45ce-a16e-99fa858ec415"),
                            AuthorId = new Guid("b2522c58-967c-4a0e-86ca-dba3bfd30c6f"),
                            Content = "This is an introductory post about finance.",
                            CreatedAt = new DateTime(2025, 2, 8, 12, 33, 47, 152, DateTimeKind.Utc).AddTicks(3502),
                            Title = "Introduction to Finance",
                            UpdatedAt = new DateTime(2025, 2, 13, 12, 33, 47, 152, DateTimeKind.Utc).AddTicks(3518)
                        },
                        new
                        {
                            Id = new Guid("6d173fd1-f19e-4d0f-aa05-7b4a37ca63bc"),
                            AuthorId = new Guid("f0a77459-ddb2-489d-9036-8b8707c0fd30"),
                            Content = "Exploring advanced strategies in finance.",
                            CreatedAt = new DateTime(2025, 1, 29, 12, 33, 47, 152, DateTimeKind.Utc).AddTicks(3521),
                            Title = "Advanced Financial Strategies",
                            UpdatedAt = new DateTime(2025, 2, 16, 12, 33, 47, 152, DateTimeKind.Utc).AddTicks(3522)
                        });
                });

            modelBuilder.Entity("FinanceHub.Core.Entities.PostCategory", b =>
                {
                    b.Property<Guid>("PostId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("CategoryId")
                        .HasColumnType("uuid");

                    b.HasKey("PostId", "CategoryId");

                    b.HasIndex("CategoryId");

                    b.ToTable("PostCategories");

                    b.HasData(
                        new
                        {
                            PostId = new Guid("9ad4264d-3782-45ce-a16e-99fa858ec415"),
                            CategoryId = new Guid("460929ba-a82f-46d1-ab8b-a8e85f987346")
                        },
                        new
                        {
                            PostId = new Guid("9ad4264d-3782-45ce-a16e-99fa858ec415"),
                            CategoryId = new Guid("a27b8bc1-f3f7-4265-95a5-5dc78b614e1e")
                        },
                        new
                        {
                            PostId = new Guid("6d173fd1-f19e-4d0f-aa05-7b4a37ca63bc"),
                            CategoryId = new Guid("8449d5d1-0164-4b28-bd2c-e5cc657a0ee2")
                        },
                        new
                        {
                            PostId = new Guid("6d173fd1-f19e-4d0f-aa05-7b4a37ca63bc"),
                            CategoryId = new Guid("a27b8bc1-f3f7-4265-95a5-5dc78b614e1e")
                        });
                });

            modelBuilder.Entity("FinanceHub.Core.Entities.Profile", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Bio")
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)");

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("text");

                    b.Property<string>("ProfilePictureUrl")
                        .HasColumnType("text");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("UserId")
                        .IsUnique();

                    b.ToTable("Profiles");

                    b.HasData(
                        new
                        {
                            Id = new Guid("9c6bf666-8de7-4b4b-ac69-7fdfa6c38cdf"),
                            Country = "USA",
                            CreatedAt = new DateTime(2025, 2, 18, 12, 33, 47, 152, DateTimeKind.Utc).AddTicks(3404),
                            DateOfBirth = new DateTime(1990, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            PhoneNumber = "+1234567890",
                            UpdatedAt = new DateTime(2025, 2, 18, 12, 33, 47, 152, DateTimeKind.Utc).AddTicks(3409),
                            UserId = new Guid("b2522c58-967c-4a0e-86ca-dba3bfd30c6f")
                        },
                        new
                        {
                            Id = new Guid("2fc82168-6f82-4c4f-9533-6c5c7896fbc5"),
                            Country = "Canada",
                            CreatedAt = new DateTime(2025, 2, 18, 12, 33, 47, 152, DateTimeKind.Utc).AddTicks(3439),
                            DateOfBirth = new DateTime(2000, 10, 10, 0, 0, 0, 0, DateTimeKind.Utc),
                            PhoneNumber = "+9876543210",
                            UpdatedAt = new DateTime(2025, 2, 18, 12, 33, 47, 152, DateTimeKind.Utc).AddTicks(3440),
                            UserId = new Guid("f0a77459-ddb2-489d-9036-8b8707c0fd30")
                        });
                });

            modelBuilder.Entity("FinanceHub.Core.Entities.Subscription", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("SubscribedToId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("SubscriberId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("SubscribedToId");

                    b.HasIndex("SubscriberId");

                    b.ToTable("Subscriptions");
                });

            modelBuilder.Entity("FinanceHub.Core.Entities.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("GoogleId")
                        .HasColumnType("text");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("text");

                    b.Property<string>("Role")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("text")
                        .HasDefaultValue("user");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = new Guid("b2522c58-967c-4a0e-86ca-dba3bfd30c6f"),
                            Email = "johndoe@example.com",
                            PasswordHash = "$2a$11$vOYpttYWU6QvWuw3KyTowu0K/A8PHOe3PNMcfh7186XD1sFtnYJoO",
                            Role = "User",
                            Username = "johndoe"
                        },
                        new
                        {
                            Id = new Guid("f0a77459-ddb2-489d-9036-8b8707c0fd30"),
                            Email = "admin@example.com",
                            PasswordHash = "$2a$11$UDNZ7Hj.HkiqeBkF.SuVyeFpLNjFqslSOuMnI68ORZ5lzyvktKGky",
                            Role = "Admin",
                            Username = "admin"
                        });
                });

            modelBuilder.Entity("FinanceHub.Core.Entities.ChatParticipant", b =>
                {
                    b.HasOne("FinanceHub.Core.Entities.Chat", "Chat")
                        .WithMany("Participants")
                        .HasForeignKey("ChatId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FinanceHub.Core.Entities.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Chat");

                    b.Navigation("User");
                });

            modelBuilder.Entity("FinanceHub.Core.Entities.Comment", b =>
                {
                    b.HasOne("FinanceHub.Core.Entities.User", "Author")
                        .WithMany()
                        .HasForeignKey("AuthorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FinanceHub.Core.Entities.Comment", "ParentComment")
                        .WithMany("Replies")
                        .HasForeignKey("ParentId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("FinanceHub.Core.Entities.Post", "Post")
                        .WithMany("Comments")
                        .HasForeignKey("PostId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Author");

                    b.Navigation("ParentComment");

                    b.Navigation("Post");
                });

            modelBuilder.Entity("FinanceHub.Core.Entities.Like", b =>
                {
                    b.HasOne("FinanceHub.Core.Entities.Post", "Post")
                        .WithMany("Likes")
                        .HasForeignKey("PostId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FinanceHub.Core.Entities.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Post");

                    b.Navigation("User");
                });

            modelBuilder.Entity("FinanceHub.Core.Entities.Message", b =>
                {
                    b.HasOne("FinanceHub.Core.Entities.Chat", "Chat")
                        .WithMany("Messages")
                        .HasForeignKey("ChatId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FinanceHub.Core.Entities.User", "Sender")
                        .WithMany()
                        .HasForeignKey("SenderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Chat");

                    b.Navigation("Sender");
                });

            modelBuilder.Entity("FinanceHub.Core.Entities.Post", b =>
                {
                    b.HasOne("FinanceHub.Core.Entities.User", "Author")
                        .WithMany()
                        .HasForeignKey("AuthorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Author");
                });

            modelBuilder.Entity("FinanceHub.Core.Entities.PostCategory", b =>
                {
                    b.HasOne("FinanceHub.Core.Entities.Category", "Category")
                        .WithMany("PostCategory")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FinanceHub.Core.Entities.Post", "Post")
                        .WithMany("PostCategory")
                        .HasForeignKey("PostId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");

                    b.Navigation("Post");
                });

            modelBuilder.Entity("FinanceHub.Core.Entities.Profile", b =>
                {
                    b.HasOne("FinanceHub.Core.Entities.User", "User")
                        .WithOne("Profile")
                        .HasForeignKey("FinanceHub.Core.Entities.Profile", "UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("FinanceHub.Core.Entities.Subscription", b =>
                {
                    b.HasOne("FinanceHub.Core.Entities.User", "SubscribedTo")
                        .WithMany()
                        .HasForeignKey("SubscribedToId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FinanceHub.Core.Entities.User", "Subscriber")
                        .WithMany()
                        .HasForeignKey("SubscriberId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("SubscribedTo");

                    b.Navigation("Subscriber");
                });

            modelBuilder.Entity("FinanceHub.Core.Entities.Category", b =>
                {
                    b.Navigation("PostCategory");
                });

            modelBuilder.Entity("FinanceHub.Core.Entities.Chat", b =>
                {
                    b.Navigation("Messages");

                    b.Navigation("Participants");
                });

            modelBuilder.Entity("FinanceHub.Core.Entities.Comment", b =>
                {
                    b.Navigation("Replies");
                });

            modelBuilder.Entity("FinanceHub.Core.Entities.Post", b =>
                {
                    b.Navigation("Comments");

                    b.Navigation("Likes");

                    b.Navigation("PostCategory");
                });

            modelBuilder.Entity("FinanceHub.Core.Entities.User", b =>
                {
                    b.Navigation("Profile");
                });
#pragma warning restore 612, 618
        }
    }
}
