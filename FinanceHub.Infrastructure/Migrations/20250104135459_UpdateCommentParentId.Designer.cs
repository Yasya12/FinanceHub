// <auto-generated />
using System;
using FinanceHub.Infrastructure.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace FinanceHub.Infrastructure.Migrations
{
    [DbContext(typeof(FinHubDbContext))]
    [Migration("20250104135459_UpdateCommentParentId")]
    partial class UpdateCommentParentId
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("FinanceHub.Core.Entities.Category", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = new Guid("ae975476-7288-4062-b9cd-3783230dd751"),
                            Description = "Posts related to the latest technology trends",
                            Name = "Technology"
                        },
                        new
                        {
                            Id = new Guid("af12aaa4-27e4-45a6-a78d-b187fb024f67"),
                            Description = "Health tips and news",
                            Name = "Health"
                        },
                        new
                        {
                            Id = new Guid("8b93fce5-3a30-4649-8796-d9f02fce1ea9"),
                            Description = "Educational articles and resources",
                            Name = "Education"
                        });
                });

            modelBuilder.Entity("FinanceHub.Core.Entities.Chat", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.ToTable("Chats");
                });

            modelBuilder.Entity("FinanceHub.Core.Entities.ChatParticipant", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("ChatId")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("JoinedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("ChatId");

                    b.HasIndex("UserId");

                    b.ToTable("ChatParticipants");
                });

            modelBuilder.Entity("FinanceHub.Core.Entities.Comment", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("AuthorId")
                        .HasColumnType("uuid");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool>("IsModified")
                        .HasColumnType("boolean");

                    b.Property<Guid?>("ParentId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("PostId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("AuthorId");

                    b.HasIndex("ParentId");

                    b.HasIndex("PostId");

                    b.ToTable("Comments");

                    b.HasData(
                        new
                        {
                            Id = new Guid("03874371-d31a-419f-ac95-576a1c4547a9"),
                            AuthorId = new Guid("2f55662a-9233-4f10-89c4-80bf9aa73930"),
                            Content = "Great introduction! Looking forward to learning more.",
                            CreatedAt = new DateTime(2024, 12, 30, 13, 54, 58, 287, DateTimeKind.Utc).AddTicks(1774),
                            IsModified = false,
                            PostId = new Guid("4d271309-e20c-4744-9354-cc829ec94d93")
                        },
                        new
                        {
                            Id = new Guid("6f2d5670-9c66-4dfe-952b-a0cd633cf86e"),
                            AuthorId = new Guid("12d3de5e-3bad-4c86-959f-2bb38db1e303"),
                            Content = "Interesting perspective on finance.",
                            CreatedAt = new DateTime(2024, 12, 31, 13, 54, 58, 287, DateTimeKind.Utc).AddTicks(1777),
                            IsModified = false,
                            PostId = new Guid("4d271309-e20c-4744-9354-cc829ec94d93")
                        },
                        new
                        {
                            Id = new Guid("d50e32c6-3d47-4ad1-ac9c-f430611170ce"),
                            AuthorId = new Guid("2f55662a-9233-4f10-89c4-80bf9aa73930"),
                            Content = "I found this article very helpful!",
                            CreatedAt = new DateTime(2025, 1, 1, 13, 54, 58, 287, DateTimeKind.Utc).AddTicks(1779),
                            IsModified = false,
                            PostId = new Guid("96c05722-8faf-41e8-9ced-9d010d015807")
                        });
                });

            modelBuilder.Entity("FinanceHub.Core.Entities.Like", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("PostId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("PostId");

                    b.HasIndex("UserId");

                    b.ToTable("Likes");

                    b.HasData(
                        new
                        {
                            Id = new Guid("2c0c4755-3993-4894-b150-4fff40720d9a"),
                            PostId = new Guid("4d271309-e20c-4744-9354-cc829ec94d93"),
                            UserId = new Guid("2f55662a-9233-4f10-89c4-80bf9aa73930")
                        },
                        new
                        {
                            Id = new Guid("f324b07a-689a-425e-9491-2935973db65e"),
                            PostId = new Guid("4d271309-e20c-4744-9354-cc829ec94d93"),
                            UserId = new Guid("12d3de5e-3bad-4c86-959f-2bb38db1e303")
                        },
                        new
                        {
                            Id = new Guid("28f1433e-67f3-4853-bab0-b4c6e49d8f62"),
                            PostId = new Guid("96c05722-8faf-41e8-9ced-9d010d015807"),
                            UserId = new Guid("2f55662a-9233-4f10-89c4-80bf9aa73930")
                        });
                });

            modelBuilder.Entity("FinanceHub.Core.Entities.Message", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("ChatId")
                        .HasColumnType("uuid");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid>("SenderId")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("SentAt")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.HasIndex("ChatId");

                    b.HasIndex("SenderId");

                    b.ToTable("Messages");
                });

            modelBuilder.Entity("FinanceHub.Core.Entities.Post", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("AuthorId")
                        .HasColumnType("uuid");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.HasIndex("AuthorId");

                    b.ToTable("Posts");

                    b.HasData(
                        new
                        {
                            Id = new Guid("4d271309-e20c-4744-9354-cc829ec94d93"),
                            AuthorId = new Guid("2f55662a-9233-4f10-89c4-80bf9aa73930"),
                            Content = "This is an introductory post about finance.",
                            CreatedAt = new DateTime(2024, 12, 25, 13, 54, 58, 287, DateTimeKind.Utc).AddTicks(1571),
                            Title = "Introduction to Finance",
                            UpdatedAt = new DateTime(2024, 12, 30, 13, 54, 58, 287, DateTimeKind.Utc).AddTicks(1584)
                        },
                        new
                        {
                            Id = new Guid("96c05722-8faf-41e8-9ced-9d010d015807"),
                            AuthorId = new Guid("12d3de5e-3bad-4c86-959f-2bb38db1e303"),
                            Content = "Exploring advanced strategies in finance.",
                            CreatedAt = new DateTime(2024, 12, 15, 13, 54, 58, 287, DateTimeKind.Utc).AddTicks(1586),
                            Title = "Advanced Financial Strategies",
                            UpdatedAt = new DateTime(2025, 1, 2, 13, 54, 58, 287, DateTimeKind.Utc).AddTicks(1587)
                        });
                });

            modelBuilder.Entity("FinanceHub.Core.Entities.PostCategory", b =>
                {
                    b.Property<Guid>("PostId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("CategoryId")
                        .HasColumnType("uuid");

                    b.HasKey("PostId", "CategoryId");

                    b.HasIndex("CategoryId");

                    b.ToTable("PostCategories");

                    b.HasData(
                        new
                        {
                            PostId = new Guid("4d271309-e20c-4744-9354-cc829ec94d93"),
                            CategoryId = new Guid("ae975476-7288-4062-b9cd-3783230dd751")
                        },
                        new
                        {
                            PostId = new Guid("4d271309-e20c-4744-9354-cc829ec94d93"),
                            CategoryId = new Guid("8b93fce5-3a30-4649-8796-d9f02fce1ea9")
                        },
                        new
                        {
                            PostId = new Guid("96c05722-8faf-41e8-9ced-9d010d015807"),
                            CategoryId = new Guid("af12aaa4-27e4-45a6-a78d-b187fb024f67")
                        },
                        new
                        {
                            PostId = new Guid("96c05722-8faf-41e8-9ced-9d010d015807"),
                            CategoryId = new Guid("8b93fce5-3a30-4649-8796-d9f02fce1ea9")
                        });
                });

            modelBuilder.Entity("FinanceHub.Core.Entities.Profile", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Bio")
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)");

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("text");

                    b.Property<string>("ProfilePictureUrl")
                        .HasColumnType("text");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("UserId")
                        .IsUnique();

                    b.ToTable("Profiles");

                    b.HasData(
                        new
                        {
                            Id = new Guid("1715cfb6-8cfd-4052-8616-0514f58fba66"),
                            Country = "USA",
                            CreatedAt = new DateTime(2025, 1, 4, 13, 54, 58, 287, DateTimeKind.Utc).AddTicks(1517),
                            DateOfBirth = new DateTime(1990, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            PhoneNumber = "+1234567890",
                            UpdatedAt = new DateTime(2025, 1, 4, 13, 54, 58, 287, DateTimeKind.Utc).AddTicks(1521),
                            UserId = new Guid("2f55662a-9233-4f10-89c4-80bf9aa73930")
                        },
                        new
                        {
                            Id = new Guid("db9ee1ad-e89a-4584-be6f-b47d74fd9a53"),
                            Country = "Canada",
                            CreatedAt = new DateTime(2025, 1, 4, 13, 54, 58, 287, DateTimeKind.Utc).AddTicks(1529),
                            DateOfBirth = new DateTime(2000, 10, 10, 0, 0, 0, 0, DateTimeKind.Utc),
                            PhoneNumber = "+9876543210",
                            UpdatedAt = new DateTime(2025, 1, 4, 13, 54, 58, 287, DateTimeKind.Utc).AddTicks(1530),
                            UserId = new Guid("12d3de5e-3bad-4c86-959f-2bb38db1e303")
                        });
                });

            modelBuilder.Entity("FinanceHub.Core.Entities.Subscription", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("SubscribedToId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("SubscriberId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("SubscribedToId");

                    b.HasIndex("SubscriberId");

                    b.ToTable("Subscriptions");
                });

            modelBuilder.Entity("FinanceHub.Core.Entities.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("GoogleId")
                        .HasColumnType("text");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("text");

                    b.Property<string>("Role")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("text")
                        .HasDefaultValue("user");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = new Guid("2f55662a-9233-4f10-89c4-80bf9aa73930"),
                            Email = "johndoe@example.com",
                            PasswordHash = "$2a$11$l6Vfro/2Bmlnzd1VRk.tnOgDtWqNf0r8TOWbA/dql3dd/qagLXBfi",
                            Role = "User",
                            Username = "johndoe"
                        },
                        new
                        {
                            Id = new Guid("12d3de5e-3bad-4c86-959f-2bb38db1e303"),
                            Email = "admin@example.com",
                            PasswordHash = "$2a$11$Ewsh7kRI27nzqZ0VQspr6Ojkg5U1nlvC2mnYaYpNxISz7UDX8AjBC",
                            Role = "Admin",
                            Username = "admin"
                        });
                });

            modelBuilder.Entity("FinanceHub.Core.Entities.ChatParticipant", b =>
                {
                    b.HasOne("FinanceHub.Core.Entities.Chat", "Chat")
                        .WithMany("Participants")
                        .HasForeignKey("ChatId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FinanceHub.Core.Entities.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Chat");

                    b.Navigation("User");
                });

            modelBuilder.Entity("FinanceHub.Core.Entities.Comment", b =>
                {
                    b.HasOne("FinanceHub.Core.Entities.User", "Author")
                        .WithMany()
                        .HasForeignKey("AuthorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FinanceHub.Core.Entities.Comment", "ParentComment")
                        .WithMany("Replies")
                        .HasForeignKey("ParentId");

                    b.HasOne("FinanceHub.Core.Entities.Post", "Post")
                        .WithMany("Comments")
                        .HasForeignKey("PostId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Author");

                    b.Navigation("ParentComment");

                    b.Navigation("Post");
                });

            modelBuilder.Entity("FinanceHub.Core.Entities.Like", b =>
                {
                    b.HasOne("FinanceHub.Core.Entities.Post", "Post")
                        .WithMany("Likes")
                        .HasForeignKey("PostId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FinanceHub.Core.Entities.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Post");

                    b.Navigation("User");
                });

            modelBuilder.Entity("FinanceHub.Core.Entities.Message", b =>
                {
                    b.HasOne("FinanceHub.Core.Entities.Chat", "Chat")
                        .WithMany("Messages")
                        .HasForeignKey("ChatId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FinanceHub.Core.Entities.User", "Sender")
                        .WithMany()
                        .HasForeignKey("SenderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Chat");

                    b.Navigation("Sender");
                });

            modelBuilder.Entity("FinanceHub.Core.Entities.Post", b =>
                {
                    b.HasOne("FinanceHub.Core.Entities.User", "Author")
                        .WithMany()
                        .HasForeignKey("AuthorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Author");
                });

            modelBuilder.Entity("FinanceHub.Core.Entities.PostCategory", b =>
                {
                    b.HasOne("FinanceHub.Core.Entities.Category", "Category")
                        .WithMany("PostCategory")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FinanceHub.Core.Entities.Post", "Post")
                        .WithMany("PostCategory")
                        .HasForeignKey("PostId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");

                    b.Navigation("Post");
                });

            modelBuilder.Entity("FinanceHub.Core.Entities.Profile", b =>
                {
                    b.HasOne("FinanceHub.Core.Entities.User", "User")
                        .WithOne("Profile")
                        .HasForeignKey("FinanceHub.Core.Entities.Profile", "UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("FinanceHub.Core.Entities.Subscription", b =>
                {
                    b.HasOne("FinanceHub.Core.Entities.User", "SubscribedTo")
                        .WithMany()
                        .HasForeignKey("SubscribedToId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FinanceHub.Core.Entities.User", "Subscriber")
                        .WithMany()
                        .HasForeignKey("SubscriberId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("SubscribedTo");

                    b.Navigation("Subscriber");
                });

            modelBuilder.Entity("FinanceHub.Core.Entities.Category", b =>
                {
                    b.Navigation("PostCategory");
                });

            modelBuilder.Entity("FinanceHub.Core.Entities.Chat", b =>
                {
                    b.Navigation("Messages");

                    b.Navigation("Participants");
                });

            modelBuilder.Entity("FinanceHub.Core.Entities.Comment", b =>
                {
                    b.Navigation("Replies");
                });

            modelBuilder.Entity("FinanceHub.Core.Entities.Post", b =>
                {
                    b.Navigation("Comments");

                    b.Navigation("Likes");

                    b.Navigation("PostCategory");
                });

            modelBuilder.Entity("FinanceHub.Core.Entities.User", b =>
                {
                    b.Navigation("Profile");
                });
#pragma warning restore 612, 618
        }
    }
}
